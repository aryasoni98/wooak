name: CI

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: [1.21, 1.22, 1.23]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Cache Go modules
              uses: actions/cache@v3
              with:
                  path: ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Download dependencies
              run: go mod download

            - name: Verify dependencies
              run: go mod verify

            - name: Run tests
              run: go test -v -race -coverprofile=coverage.out ./...

            - name: Generate coverage report
              run: go tool cover -html=coverage.out -o coverage.html

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.out
                  flags: unittests
                  name: codecov-umbrella

    lint:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.23

            - name: golangci-lint
              uses: golangci/golangci-lint-action@v3
              with:
                  version: latest
                  args: --timeout=5m

    security:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: 1.23

            - name: Run Gosec Security Scanner
              uses: securecodewarrior/github-action-gosec@master
              with:
                  args: "-fmt sarif -out gosec.sarif ./..."

            - name: Upload SARIF file
              uses: github/codeql-action/upload-sarif@v2
              with:
                  sarif_file: gosec.sarif

    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
                go-version: [1.21, 1.23]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}

            - name: Build
              run: go build -v ./...

            - name: Test build
              run: go test -c ./...
